


version: "3.8"
services:
  backend:
    build:
      dockerfile: Dockerfile
      context: ./backend/
    volumes:
      - ./backend/nestjs/:/backend/nestjs/
      - /backend/nestjs/node_modules
    command: npm run start:dev
    environment: 
      - CHOKIDAR_USEPOLLING=true
    expose:
      - 3000 # 내부적으로 NestJS가 사용하는 포트
    # ports:
      # - 3000:3000 # NestJS가 직접 연결될 경우 사용 (디버깅 시 편리)
    networks:
      - app-network
  frontend:
     build:
      dockerfile: Dockerfile
      context: ./frontend/
     volumes:
      - ./frontend/vuejs:/frontend/vuejs
      - /frontend/vuejs/node_modules
    #  command: npm run serve
     environment: 
      - CHOKIDAR_USEPOLLING=true
     expose:
      - 8080 # 내부적으로 vue 사용하는 포트
    #  ports:
    #   - 8080:8080 # vue가 직접 연결될 경우 사용 (디버깅 시 편리)
     networks:
      - app-network
  nginx:
    image: nginx:latest
    build:
      dockerfile: Dockerfile
      context: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro # Nginx 설정 파일
    ports:
      - 80:80 # Nginx가 외부에서 80포트로 수신
    depends_on:
      - backend
      # - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge